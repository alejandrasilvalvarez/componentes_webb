{"ast":null,"code":"var _jsxFileName = \"/Users/dianasilva/myapp/src/Questions.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionsList() {\n  _s();\n  const preguntasRespuestas = [{\n    pregunta: \"Bienvenido al quiz de react, presione Adelante para continuar \",\n    respuesta: \"Quiz realizado por Diana Silva\"\n  }, {\n    pregunta: \"Cómo se define un nuevo componente en React?\",\n    respuesta: \"Un componente se define utilizando la función 'function' o 'class', igual se puede crear un componente en una constante, como lo visto en el primer tutorial. Hasta ahora los hemos llamado desde index.js\"\n  }, {\n    pregunta: \"Cómo se define un nuevo estado?\",\n    respuesta: \"Se define utilizando el hook 'useState'. Un estado en React es un almacén de datos mutable, los hooks permiten usar estado y otras características de React sin escribir una clase, lo importamos de la siguiente manera: \\n \\n import { useState } from 'react' \\n \\n En el ejemplo de los likes lo definimos de la sigueinte manera: \\n \\n const [likes, setLikes] = useState(props.likes);\"\n  }, {\n    pregunta: \"F o V ... El inicializador del estado puede ser una función.\",\n    respuesta: \"Verdadero. El estado inicial puede ser una función que devuelve el valor inicial.\"\n  }, {\n    pregunta: \"Qué es el virtual DOM?\",\n    respuesta: \"El virtual DOM es una representación virtual en memoria del DOM real y se utiliza para mejorar el rendimiento de las actualizaciones del DOM en React.\"\n  }];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const handleAvanzar = () => {\n    if (currentIndex < preguntasRespuestas.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n  const handleRetroceder = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  const handleReiniciar = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-2\",\n        onClick: handleReiniciar,\n        disabled: currentIndex === 0,\n        children: \"Reiniciar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-2\",\n        onClick: handleRetroceder,\n        disabled: currentIndex === 0,\n        children: \"Atr\\xE1s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mx-2\",\n        onClick: handleAvanzar,\n        disabled: currentIndex === preguntasRespuestas.length - 1,\n        children: \"Adelante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: preguntasRespuestas[currentIndex].pregunta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mx-auto\",\n        style: {\n          width: '350px',\n          whiteSpace: 'pre-line'\n        },\n        dangerouslySetInnerHTML: {\n          __html: preguntasRespuestas[currentIndex].respuesta\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionsList, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","QuestionsList","_s","preguntasRespuestas","pregunta","respuesta","currentIndex","setCurrentIndex","handleAvanzar","length","handleRetroceder","handleReiniciar","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","width","whiteSpace","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/dianasilva/myapp/src/Questions.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction QuestionsList() {\n    const preguntasRespuestas = [\n        { pregunta: \"Bienvenido al quiz de react, presione Adelante para continuar \", respuesta: \"Quiz realizado por Diana Silva\" },\n        { pregunta: \"Cómo se define un nuevo componente en React?\", respuesta: \"Un componente se define utilizando la función 'function' o 'class', igual se puede crear un componente en una constante, como lo visto en el primer tutorial. Hasta ahora los hemos llamado desde index.js\" },\n        { pregunta: \"Cómo se define un nuevo estado?\", respuesta: \"Se define utilizando el hook 'useState'. Un estado en React es un almacén de datos mutable, los hooks permiten usar estado y otras características de React sin escribir una clase, lo importamos de la siguiente manera: \\n \\n import { useState } from 'react' \\n \\n En el ejemplo de los likes lo definimos de la sigueinte manera: \\n \\n const [likes, setLikes] = useState(props.likes);\" },\n        { pregunta: \"F o V ... El inicializador del estado puede ser una función.\", respuesta: \"Verdadero. El estado inicial puede ser una función que devuelve el valor inicial.\" },\n        { pregunta: \"Qué es el virtual DOM?\", respuesta: \"El virtual DOM es una representación virtual en memoria del DOM real y se utiliza para mejorar el rendimiento de las actualizaciones del DOM en React.\" },\n    ];\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n    const handleAvanzar = () => {\n        if (currentIndex < preguntasRespuestas.length - 1) {\n            setCurrentIndex(currentIndex + 1);\n        }\n    };\n\n    const handleRetroceder = () => {\n        if (currentIndex > 0) {\n            setCurrentIndex(currentIndex - 1);\n        }\n    };\n\n    const handleReiniciar = () => {\n        if (currentIndex > 0) {\n            setCurrentIndex(0);\n        }\n    };\n\n    return (\n        <div className=\"text-center mt-3\">\n\n            <div>\n                <button className=\"mx-2\" onClick={handleReiniciar} disabled={currentIndex === 0}>\n                    Reiniciar\n                </button>\n                <button className=\"mx-2\" onClick={handleRetroceder} disabled={currentIndex === 0}>\n                    Atrás\n                </button>\n                <button className=\"mx-2\" onClick={handleAvanzar} disabled={currentIndex === preguntasRespuestas.length - 1}>\n                    Adelante\n                </button>\n\n            </div>\n            <br></br>\n            <div>\n                <h3>{preguntasRespuestas[currentIndex].pregunta}</h3>\n                <p className=\"mx-auto\"\n                    style={{\n                        width: '350px',\n                        whiteSpace: 'pre-line',\n                    }}\n                    dangerouslySetInnerHTML={{\n                        __html: preguntasRespuestas[currentIndex].respuesta,\n                    }}\n\n                ></p>\n            </div>\n        </div>\n    );\n}\n\nexport default QuestionsList;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,mBAAmB,GAAG,CACxB;IAAEC,QAAQ,EAAE,gEAAgE;IAAEC,SAAS,EAAE;EAAiC,CAAC,EAC3H;IAAED,QAAQ,EAAE,8CAA8C;IAAEC,SAAS,EAAE;EAA6M,CAAC,EACrR;IAAED,QAAQ,EAAE,iCAAiC;IAAEC,SAAS,EAAE;EAAgY,CAAC,EAC3b;IAAED,QAAQ,EAAE,8DAA8D;IAAEC,SAAS,EAAE;EAAoF,CAAC,EAC5K;IAAED,QAAQ,EAAE,wBAAwB;IAAEC,SAAS,EAAE;EAAyJ,CAAC,CAC9M;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIF,YAAY,GAAGH,mBAAmB,CAACM,MAAM,GAAG,CAAC,EAAE;MAC/CF,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIJ,YAAY,GAAG,CAAC,EAAE;MAClBC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAIL,YAAY,GAAG,CAAC,EAAE;MAClBC,eAAe,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAE7Bb,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAQY,SAAS,EAAC,MAAM;QAACE,OAAO,EAAEH,eAAgB;QAACI,QAAQ,EAAET,YAAY,KAAK,CAAE;QAAAO,QAAA,EAAC;MAEjF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QAAQY,SAAS,EAAC,MAAM;QAACE,OAAO,EAAEJ,gBAAiB;QAACK,QAAQ,EAAET,YAAY,KAAK,CAAE;QAAAO,QAAA,EAAC;MAElF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA;QAAQY,SAAS,EAAC,MAAM;QAACE,OAAO,EAAEN,aAAc;QAACO,QAAQ,EAAET,YAAY,KAAKH,mBAAmB,CAACM,MAAM,GAAG,CAAE;QAAAI,QAAA,EAAC;MAE5G;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CAAC,eACNnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAKV,mBAAmB,CAACG,YAAY,CAAC,CAACF;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrDnB,OAAA;QAAGY,SAAS,EAAC,SAAS;QAClBQ,KAAK,EAAE;UACHC,KAAK,EAAE,OAAO;UACdC,UAAU,EAAE;QAChB,CAAE;QACFC,uBAAuB,EAAE;UACrBC,MAAM,EAAErB,mBAAmB,CAACG,YAAY,CAAC,CAACD;QAC9C;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjB,EAAA,CA3DQD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA6DtB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}